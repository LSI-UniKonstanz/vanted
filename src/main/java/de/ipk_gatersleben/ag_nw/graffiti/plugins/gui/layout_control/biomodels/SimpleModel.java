/*
 * BioModels Database: Web Services client library
 * Copyright (C) BioModels.net  2005-2012
 *
 *
 * The BioModels Database Web Services client library is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package de.ipk_gatersleben.ag_nw.graffiti.plugins.gui.layout_control.biomodels;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;

public class SimpleModel
{
    private final String id;
    private String submissionId;
    private final String name;
    private String publicationId;
    private List<String> authors;
    private List<String> encoders;
    private Date lastModificationDate;


    /**
     * Constructor (builds a partial object).
     * @param id model identifier
     * @param name model name
     */
    public SimpleModel(String id, String name)
    {
        this.id = id;
        this.name = name;
    }


    /**
     * Constructor (builds a complete object).
     * @param id model identifier (e.g. BIOMD0000000300)
     * @param submissionId submission identifier (e.g. MODEL1008170000)
     * @param name model name
     * @param encoders list of the model's encoders
     * @param publicationId identifier of the associated publication (PMID, DOI or URL)
     * @param authors list of the publication's authors
     * @param lastModificationDate date of last modification (expressed according to ISO 8601, e.g. "2012-01-19T19:22:15+00:00")
     */
    public SimpleModel(String id, String submissionId, String name, List<String> encoders, String publicationId, List<String> authors, String lastModificationDate)
    {
        this.id = id;
        this.submissionId = submissionId;
        this.name = name;
        this.encoders = encoders;
        this.publicationId = publicationId;
        this.authors = authors;

        try
        {
            long unix_seconds = Long.parseLong(lastModificationDate);
            this.lastModificationDate = new Date(unix_seconds);
        }
        catch (Exception e)
        {
            this.lastModificationDate = null;
        }
    }


    /**
     * Returns a hash code value for this object.
     * Generated by Eclipse.
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode()
    {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((lastModificationDate == null) ? 0 : lastModificationDate.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        result = prime * result + ((publicationId == null) ? 0 : publicationId.hashCode());

        return result;
    }


    /**
     * Indicates whether some other object is "equal to" this one.
     * Partially generated by Eclipse.
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj)
    {
        if (this == obj)
        {
            return true;
        }

        if (obj == null)
        {
            return false;
        }

        if (getClass() != obj.getClass())
        {
            return false;
        }

        SimpleModel other = (SimpleModel) obj;
        if (id == null)
        {
            if (other.id != null)
            {
                return false;
            }
        }
        else if (!id.equals(other.id))
        {
            return false;
        }

        if (lastModificationDate == null)
        {
            if (other.lastModificationDate != null)
            {
                return false;
            }
        }
        else if (!lastModificationDate.equals(other.lastModificationDate))
        {
            return false;
        }

        if (name == null)
        {
            if (other.name != null)
            {
                return false;
            }
        }
        else if (!name.equals(other.name))
        {
            return false;
        }

        if (publicationId == null)
        {
            if (other.publicationId != null)
            {
                return false;
            }
        }
        else if (!publicationId.equals(other.publicationId))
        {
            return false;
        }

        if (((null == authors) && (null != other.authors)) || ((null != authors) && (null == other.authors)))
        {
            return false;
        }
        else if (null != authors)
        {
            if (authors.size() != other.authors.size())
            {
                return false;
            }
            else
            {
                for (int i=0; i<authors.size(); ++i)
                {
                    if (!authors.get(i).equals(other.authors.get(i)))
                    {
                        return false;
                    }
                }
            }
        }

        if (((null == encoders) && (null != other.encoders)) || ((null != encoders) && (null == other.encoders)))
        {
            return false;
        }
        else if (null != encoders)
        {
            if (encoders.size() != other.encoders.size())
            {
                return false;
            }
            else
            {
                for (int i=0; i<encoders.size(); ++i)
                {
                    if (!encoders.get(i).equals(other.encoders.get(i)))
                    {
                        return false;
                    }
                }
            }
        }

        return true;
    }


    /**
     * Returns a string representation of the object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString()
    {
        StringBuilder str = new StringBuilder();

        str.append("Identifier: ").append(this.id).append("\n");
        str.append("Submission identifier: ").append(this.submissionId).append("\n");
        str.append("Name: ").append(this.name).append("\n");
        str.append("Encoders:\n");
        for (String encoder: this.encoders)
        {
            str.append("\t- ").append(encoder).append("\n");
        }
        str.append("Publication: ").append(this.publicationId).append("\n");
        str.append("Authors:\n");
        for (String author: this.authors)
        {
            str.append("\t- ").append(author).append("\n");
        }
        str.append("Last modified: ").append(this.getLastModificationDateStr()).append("\n");

        return str.toString();
    }


    /**
     * Get model identifier
     * @return model identifier
     */
    public String getId()
    {
        return this.id;
    }


    /**
     * Get the model name
     * @return model name
     */
    public String getName()
    {
        return this.name;
    }


    /**
     * Get the publication identifier
     * @return publication identifier
     */
    public String getPublicationId()
    {
        return this.publicationId;
    }


    /**
     * Get the date of last modification
     * @return date of last modification
     */
    public Date getLastModificationDate()
    {
        return this.lastModificationDate;
    }

    /**
     * Get the date of last modification, in a human readable form.
     * @return date of last modification
     */
    public String getLastModificationDateStr()
    {
        String date = null;
        SimpleDateFormat humanDateFormat = new SimpleDateFormat("dd MMM yyyy HH:mm:ss z");   // set date format
        humanDateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));   // set timezone to UTC
        if (null != this.lastModificationDate)
        {
            date = humanDateFormat.format(this.lastModificationDate);
        }

        return date;
    }

    /**
     * Get submission identifier
     * @return the submissionId
     */
    public String getSubmissionId()
    {
        return this.submissionId;
    }


    /**
     * Get names of the authors of the publication
     * @return the authors
     */
    public List<String> getAuthors()
    {
        return this.authors;
    }


    /**
     * Get the names of the encoders of the model.
     * @return the encoders
     */
    public List<String> getEncoders()
    {
        return this.encoders;
    }
}

